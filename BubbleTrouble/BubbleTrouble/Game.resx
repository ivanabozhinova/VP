<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAACAAAAAAAAAAAAAAAAAAAAAA
        AAAdM0b/Dig+/w4oPv8MJ0D/EiZA/xknNf9PX2f/b4KO/2t+iv9sgIj/coSN/3GEkP9xh5L/dYiU/36P
        m/9+lqH/fpSf/3SLk/9xg4z/aHyF/2R2f/9ea3j/VGNv/0xZYP9GVFj/PkdL/x4qLv8SJzr/DidA/xEp
        Pv8PJUD/HTJI/wIbOP8EGzT/ABo1/wcdMP8wP0b/epCb/4ufr/97j5j/e5Cd/4OVo/+CmKP/kKe0/6W8
        zP+Ko67/eI+W/26Ci/9sgIn/eI+X/4OZpP+Zr7//k6m0/3SIkf9vg4v/Z3Z9/1dlb/9UYGn/R1df/zI6
        Pv8TISv/ABsz/wAcMv8AGzT/DytF/wEeNv8HGyz/WGZv/5GouP+LobH/gpij/4ierv+Op6//kqi4/6C8
        zP+Op7L/Sllg/25+h/+CmKP/dIaP/3aGjv+ImKb/eoya/1BeZ/9peYL/qL/P/5Opuf94jpn/cYGP/2Fx
        ef9ZZWn/T11n/zVBRf8bKjH/Ahwy/wwnQP8fOVT/Ch82/1xsdP+jusr/iqKv/4mirf+Sqrf/mrG+/5+2
        x/+lwdb/p8HR/1tpcv9seoP/tMvc/77c8P/B4PH/wODu/7nb6v+yz+H/hpys/2R0ff9kdH3/lKy5/6vH
        1/+FnKn/e4+Y/2h7h/9ZZ3D/UGBo/zlGTf8pMDj/Dig+/0VbbP9oeIH/psPV/4yns/+Vrbj/m7LC/6C6
        yf+mwM//qcXU/6/L2/+mwM//ss7e/8bo/P+uzOD/scrc/7DM3P+zzdz/sMrg/6zK2v/B3+//ze3//46k
        r/9IVFj/m7LC/7bS4v+Rp7L/gpmm/3CCi/9ca3L/U2Fq/zdCSf8eLDb/UmNp/6vJ2P+asr//m7LC/564
        yP+ovtH/qsTT/6rH2f+uytr/sMzb/7HN3f+yzd//sMra/7DM3P+vy9v/sszb/63L2/+wzNz/rcvb/7PK
        2/+vydn/weP3/6e+zv9MWl3/przM/6zI1/+Xrr7/iZ+q/3KGj/9dbXX/VWVp/z1IT/+jvM7/qb/P/523
        xv+mvc3/qcPS/6zG1f+uydv/r8va/7DM3P+uyt//r8vb/7LM2/+wy93/rsjd/7DM3P+vy9r/r8rc/67M
        3P+0yt3/rcrc/6/L2v+tydn/0PD+/3KHjf9TYGf/wuP0/6a/0f+bscH/hZ2q/3KEjf9YanL/UV5l/6K+
        zf+jvcz/qMLS/6nE1v+uyNj/sMra/6/L2v+vy9v/sMzc/7DM3P+uzNz/rcvb/7HL2v+yzNv/sMvd/67K
        3/+wzNz/scvb/7LM3P+tytz/rsvd/6/K3P+wzNz/s9Hh/26AiP+pw9L/sMrZ/6bBzf+Zsb7/g5mk/25/
        i/9YZm//qcHO/6zH2f+sx9n/sMjd/6vG3/+txt//sMbh/67J2/+vytz/sMzc/7LM3P+wy93/r8va/7DL
        3f+xy9v/rszb/7HM2P+vytz/sMvd/6/L2/+wzNz/r8vb/63J2f+31Ob/c4SQ/6G4yP+wzOH/rsfZ/6W7
        zv+UrLn/fJKd/2Z1gf+wxdv/r8jh/67G4f+xw+H/rsPi/7DF5P+uw+L/q8Xg/6/J3v+wzNv/sMzc/63N
        3P+uzNz/r8vb/7HJ3v+vy9r/rszc/6/L2/+xyd7/sMzc/6/L2v+xy9v/rsvd/67J2/+dtMX/r8Xg/63I
        4f+vxeD/q8Hc/6G1zP+Mo7D/coSS/63F2v+tx+L/q8Tj/6zB5f+twOX/q8Dl/67B5f+vxOH/rcfi/6/L
        2/+wzNz/sszc/6/L2v+vy9v/sMvd/7LM3P+vytz/scvb/63K3P+uzNv/rcvb/7LM3P+xzd3/rcvb/73Z
        6f+tyeP/q8Pk/6zD4v+rwOT/prva/5iswv98kaT/r8fc/7LE4v+wwOX/rcHi/6jB4P+vyOf/uNPx/6C+
        2P+du8//n8DR/56+0/+11Oz/uNTp/67I1/+yzNz/rcrc/7HL2/+wzNz/r8va/7DM3P+92uz/qcnd/5y8
        0P+ivtT/nbvQ/63H4v+80/L/rsHl/6zB5f+svtz/nLHO/4qarv+yx93/sMni/7DF4v+pwt//udPu/529
        0f9+kZ3/wsrP//T4+v/1/P3/0d/d/4iYof+Pr73/u9jq/7DM2/+yy93/rc3c/63J2P+91uj/qMjc/5ao
        sP/R0NP/7/P1//f8+//p7u3/nKWq/4Kbrf+wzOz/tM3s/6m/4P+fuNH/i5+1/1JgY/8AAwX/AQAB/wIB
        Af8AAAD/AAAA/wEBAf8BAAD/AAEB/wAAAf8AAAD/AAIB/wABAP8EAQH/AgUF/09hZP+wytr/VGJr/wIF
        Bf8CAQH/AAAA/wAAAP8AAQD/AAAA/wABAf8AAAH/AAIA/wACAf8AAAD/AQAA/wEBAv8DAwP/BQUF/1po
        cf+InK3/bYeP/3h6fP+8vLz/jIWD/wgFBf8MCwb/EA0F/wIBAf9nW1j/vby9/4mQiv9DUVT/BQUG/7TQ
        4P8ECAT/XmFg/7Chlv9BLB7/HBMG/yskIP8bFRH/AAAA/11WUv+8vLn/pZ+b/2Z0eP9/mqb/fZCc/0lX
        W/8AAAD/gpKb/6fK2/+Zp6v////9/87Bxv8AAQD/R0Q9/2JdVv9jX1T/SkQ8/wEAAP+Fd27//////4GE
        hP8AAQD/utjy/wABAP+0r63/ZUg3/x0NBP9vbGT/TktE/1tYUf9STEX/AAEA/6uipP/7////0s3L/3+Z
        of+y1OP/aHmF/wABAf+Lnab/g56q/9HMyv////3/MSEj/zg1J/9kX1j/Fg0H/xEMBP9JQz//UkdA/wAA
        Av/x5ef/t7Wy/wACAf+gxdn/AAEA/52IgP8AAQD/V05C/yMeFv8AAAH/AgIA/0pFPf8qJxr/KyAa//z8
        /f/9////tr7C/52+z/9qfIX/AAEA/4SYqP+NnKP//v/7//Hw8f8AAwP/U0o9/yQbFP8AAAD/AAEA/z88
        NP+Lh4P/AAEA/62amv+xtrX/AQAB/4aktP8AAAH/e2tp/xEJAP9nXFX/AAEA/wEBAv8AAAH/Qjs5/11d
        R/8AAQD/+fL2///////O09P/i6q7/2+Biv8BAQH/d42Y/6y2v///////+vb5/w4HA/9GOCn/RkE2/wAC
        AP8AAQD/x8G6/6ahmv8EAQL/5c7N/7K2sv8CAQH/cpGi/wEBAf+snJr/GBIA/1lOQv8uJyP/AAEA/4qF
        fv/JwLP/LhsH/zsmHv/+/f3//////8PCxf+Bnaz/c4WT/wAAAP97kZz/o7G1///++f////3/kHh0/wID
        AP9jV1T/OTMv/y8oJP99eXX/IBkV/1dEPv//////XnF9/wABAP+ascH/AAAA/5eVmP9wYVb/Fg0A/0pG
        Of9CPDX/xLWv/35qVv8BAQH/yry5////////////xcXF/4aisf9yho//BgcE/2Nxev9hb3P/o5+b/7q9
        vP+7u7v/PS4j/wAAAP8qJB3/JyIg/wkGAP8MBgD/gHl3/2mAiP8hO1D/BQUF/7TN1P8DBgb/MU1c/21v
        eP8wIx3/GRcG/xgWA/8FBAT/AAAA/2leWP+8vbr/u7q6/7u7u/+UnJv/aoKN/09bZP9XY2f/BQQE/wAC
        Af8AAAH/AQAA/wECAP8BAQD/AAEA/wABAf8AAQD/AQAA/wAAAf8BAQD/AQEB/wICAv8cISH/Ky8x/yIq
        L/8BAwX/AAAB/wAAAf8AAAD/AAEA/wABAP8AAgH/AQAB/wAAAP8AAQD/AAEA/wAAAP8BAAH/AgUE/8bW
        5P/B1uP/yeP4/5GiqP+JkJH/ub6+/7u7u//O0tT/oqiz/6Kvwf+uytr/ncLd/5jA4f9Sd5T/AgID/xEU
        FP8tMzj/AAMA/0JXZP95qcn/eKrM/3ehwv+dvNj/o7/O/6yzvf+osK//urm5/6arq/+BjIv/m7jE/7LP
        4f+dt8f/x9vk/9bn8//a8f7/uNHc/1Nqd/8wVXL/T3yf/26Zt/+Ru9X/ocbj/57G4P+Putj/O1dn/wEB
        AP9TY2f/u9np/6vJ2f+Moa7/AAMA/yc3P/9ynr//hrLT/3yozv9wn8L/YpS2/1mHqP9Ba4z/NFJm/4mj
        sv/G4fP/ss/h/6nF1f9jeor/d4uU/52utP/C2eb/0+z3/5Kuvf96nbb/cpOr/3ydtf9slLD/W3+W/x8u
        Nf8AAQH/iJih/8Dd7/+qyNj/r8vb/7HL4P+tx8//AQEB/xMZHf9fgZX/XYSi/2CLqf9ehqL/b5Kr/4io
        vf+sw9P/zOv8/6/N3f+Xrrv/a4KT/y5IY/8fN1L/HThR/0ddbf98kqL/u9Pe/5uxtP9sgIj/T2Zu/yQw
        M/8EAgD/EhQW/8La5//B4fX/ttDg/7fR4f+z0+L/t9Hh/7PR5v+60OP/KzM3/wcKCf9AS1L/epSj/3SL
        mP+Bkpj/qbvE/7fP2v+Cl6T/UWt7/yM/VP8BHjr/eYWJ/z5XcP8vR13/FC1K/wEePP8IHC3/CxMY/xEX
        G/8PEhf/Iysw/1VodP9yjp3/fJWg/46nsv+YtMP/obfK/6C6yf+iucr/nrnF/5Kqt/+Enq7/T2Bs/xQT
        Fv8GCwv/Fx8k/yIvNv8kOEj/ECtH/wYgNv8DHDv/BR47/x44U/+GlKL/c4OM/1Fpfv9IXXD/MUth/xEn
        Ov8BDx3/AxMn/wIaMP8DHzn/ARw4/wQcN/8CHDf/AB03/wckPP8KJT7/CyVA/wwoPv8IJT3/Ax85/wUd
        OP8DHDn/Ax46/wYbMv8CEyT/AAsV/wAVKP8AHjr/BB87/wEgPv8GI0H/LT1L/4+dp/+Pnaf/hZOd/2d4
        if9dcIP/S2N4/z9VaP8oQVr/FC9N/wQhPf8DIDz/BSA8/wUfP/8DHz//Ah89/wIfPf8CHz3/ASA+/wIf
        O/8EIT3/AB87/wMgPP8BIDz/AiBA/wolQf8NKET/ESxI/xQuSf8VMUv/JUFX/xUkNf8PKT//lKSt/5Gi
        rv+Vo63/iZGZ/3SDlf9tfpD/ZHWH/1hsgv9NYnj/Q1xu/zpUaf83T2X/MUth/zBKYP8wSWL/MEpg/zBJ
        Yv8wSGP/M0xl/zhNZP84UGb/N1Bp/zpSaP87U2n/OVJr/z1Saf86Umj/Nk5k/0Rccf8uPEr/AB87/xAn
        QP+Xoq//l6Wu/5imr/+Ypq//hJOa/4eYpP94iZr/c4SW/3GBj/9reoz/YnaH/150hf9ecYT/XXCD/1pw
        gf9ab4L/XHCA/15ygv9ecoP/XHGE/2B0hf9gdIX/XnSF/15yg/9dcIP/Vm1+/1Jnev9meor/VWNs/19w
        gf8oQFb/AR46/6Kut/+dqrf/namy/52qt/+cp7T/kJme/5GfqP+Hl6D/gpCe/3uNm/96jJr/eoma/3qJ
        mv92iJb/doiW/3iIlv93iJn/eIeY/3eImf92h5j/eYmX/3iIlv95hpf/dIWW/3OCk/95h5X/Y29z/46c
        pv+Mm6f/gY+d/2d7jP8+VGf/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>